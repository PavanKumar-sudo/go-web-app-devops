name: CI/CD

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go 1.21.10
        uses: actions/setup-go@v2
        with:
          go-version: 1.21.10

      - name: Build
        run: go build -o go-web-app

      - name: Test
        run: go test ./...

  code-quality:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go 1.21.10
        uses: actions/setup-go@v2
        with:
          go-version: 1.21.10

      - name: Set Go environment to prevent SDK linting
        run: |
          echo "GOPATH=$HOME/go" >> $GITHUB_ENV
          echo "GOPROXY=https://proxy.golang.org,direct" >> $GITHUB_ENV
          echo "GOCACHE=$HOME/.cache/go-build" >> $GITHUB_ENV
          echo "GOROOT=$(go env GOROOT)" >> $GITHUB_ENV

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.56.2
          args: ./...
          install-mode: binary

  push:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/go-web-app:${{ github.run_id }}

  update-newtag-in-helm-chart:
    runs-on: ubuntu-latest
    needs: push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOKEN }}

      - name: Update tag in Helm chart
        run: |
          sed -i 's/tag: .*/tag: "${{ github.run_id }}"/' helm/go-web-app-chart/values.yaml

      - name: Commit and push changes
        run: |
          git config --global user.name "PavanKumar-sudo"
          git config --global user.email "pavanvinjamuri212@gmail.com"
          git add helm/go-web-app-chart/values.yaml
          git commit -m "Update tag in Helm chart"
          git push
